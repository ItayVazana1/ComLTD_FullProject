backend-1        | INFO:     Uvicorn running on http://0.0.0.0:10000 (Press CTRL+C to quit)
backend-1        | 2025-01-10 13:07:39 | DEBUG | app.models.database:get_db:22 | Initializing database session.
backend-1        | 2025-01-10 13:07:39 | INFO | app.routes.users:register:140 | Registration request received for: johndoe123
backend-1        | 2025-01-10 13:07:39 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:23 | Checking for SQL injection in input: johndoe123
backend-1        | 2025-01-10 13:07:39 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:40 | SQL-safe input: Original: johndoe123, Sanitized: johndoe123
backend-1        | 2025-01-10 13:07:39 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: johndoe123
backend-1        | 2025-01-10 13:07:39 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: johndoe123, Sanitized: johndoe123
backend-1        | 2025-01-10 13:07:39 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:23 | Checking for SQL injection in input: vazanaitay3133@gmail.com
backend-1        | 2025-01-10 13:07:39 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:40 | SQL-safe input: Original: vazanaitay3133@gmail.com, Sanitized: vazanaitay3133@gmail.com
backend-1        | 2025-01-10 13:07:39 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: vazanaitay3133@gmail.com
backend-1        | 2025-01-10 13:07:39 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: vazanaitay3133@gmail.com, Sanitized: vazanaitay3133@gmail.com
backend-1        | 2025-01-10 13:07:39 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: Password123!
backend-1        | 2025-01-10 13:07:39 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: Password123!, Sanitized: Password123!
backend-1        | 2025-01-10 13:07:39 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: Password123!
backend-1        | 2025-01-10 13:07:39 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: Password123!, Sanitized: Password123!
backend-1        | 2025-01-10 13:07:40 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: John Doe
backend-1        | 2025-01-10 13:07:40 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: John Doe, Sanitized: John Doe
backend-1        | 2025-01-10 13:07:40 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: 0549876543
backend-1        | 2025-01-10 13:07:40 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: 0549876543, Sanitized: 0549876543
backend-1        | 2025-01-10 13:07:40 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: Male
backend-1        | 2025-01-10 13:07:40 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: Male, Sanitized: Male
backend-1        | 2025-01-10 13:07:40 | DEBUG | app.models.tables:__init__:73 | User model initialized: johndoe123, Email: vazanaitay3133@gmail.com
backend-1        | 2025-01-10 13:07:40 | INFO | app.utils.audit_log:create_audit_log_entry:16 | Attempting to create audit log for user_id: 56af281b-9253-461a-8f26-27de34251fa2, action: User registration
backend-1        | 2025-01-10 13:07:40 | DEBUG | app.models.tables:__init__:155 | AuditLog initialized for User ID: 56af281b-9253-461a-8f26-27de34251fa2, Action: User registration
backend-1        | 2025-01-10 13:07:40 | INFO | app.utils.audit_log:create_audit_log_entry:34 | Audit log created successfully for user_id: 56af281b-9253-461a-8f26-27de34251fa2, action: User registration
backend-1        | 2025-01-10 13:07:40 | DEBUG | app.models.database:get_db:26 | Database session yielded successfully.
backend-1        | 2025-01-10 13:07:40 | DEBUG | app.models.database:get_db:32 | Database session closed.
backend-1        | INFO:     172.21.0.1:50872 - "POST /users/register HTTP/1.1" 200 OK
backend-1        | 2025-01-10 13:07:40 | DEBUG | app.models.database:get_db:22 | Initializing database session.
backend-1        | 2025-01-10 13:07:40 | INFO | app.routes.users:login:98 | Login request received for: vazanaitay3133@gmail.com
backend-1        | 2025-01-10 13:07:40 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:23 | Checking for SQL injection in input: vazanaitay3133@gmail.com
backend-1        | 2025-01-10 13:07:40 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:40 | SQL-safe input: Original: vazanaitay3133@gmail.com, Sanitized: vazanaitay3133@gmail.com
backend-1        | 2025-01-10 13:07:40 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: vazanaitay3133@gmail.com
backend-1        | 2025-01-10 13:07:40 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: vazanaitay3133@gmail.com, Sanitized: vazanaitay3133@gmail.com
backend-1        | 2025-01-10 13:07:40 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: Password123!
backend-1        | 2025-01-10 13:07:40 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: Password123!, Sanitized: Password123!
backend-1        | 2025-01-10 13:07:40 | INFO | app.utils.audit_log:create_audit_log_entry:16 | Attempting to create audit log for user_id: 56af281b-9253-461a-8f26-27de34251fa2, action: User login
backend-1        | 2025-01-10 13:07:40 | DEBUG | app.models.tables:__init__:155 | AuditLog initialized for User ID: 56af281b-9253-461a-8f26-27de34251fa2, Action: User login
backend-1        | 2025-01-10 13:07:40 | INFO | app.utils.audit_log:create_audit_log_entry:34 | Audit log created successfully for user_id: 56af281b-9253-461a-8f26-27de34251fa2, action: User login
backend-1        | 2025-01-10 13:07:40 | DEBUG | app.models.database:get_db:26 | Database session yielded successfully.
backend-1        | 2025-01-10 13:07:40 | DEBUG | app.models.database:get_db:32 | Database session closed.
backend-1        | INFO:     172.21.0.1:50880 - "POST /users/login HTTP/1.1" 200 OK
backend-1        | 2025-01-10 13:07:40 | DEBUG | app.models.database:get_db:22 | Initializing database session.
backend-1        | 2025-01-10 13:07:40 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:23 | Checking for SQL injection in input: 402401c0-ac31-4635-91ec-326cf23b68b0
backend-1        | 2025-01-10 13:07:40 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:40 | SQL-safe input: Original: 402401c0-ac31-4635-91ec-326cf23b68b0, Sanitized: 402401c0-ac31-4635-91ec-326cf23b68b0
backend-1        | 2025-01-10 13:07:40 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: 402401c0-ac31-4635-91ec-326cf23b68b0
backend-1        | 2025-01-10 13:07:40 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: 402401c0-ac31-4635-91ec-326cf23b68b0, Sanitized: 402401c0-ac31-4635-91ec-326cf23b68b0
backend-1        | 2025-01-10 13:07:40 | INFO | app.routes.users:get_user_details:208 | Fetching user details for token: 402401c0-ac31-4635-91ec-326cf23b68b0
backend-1        | 2025-01-10 13:07:40 | INFO | app.utils.audit_log:create_audit_log_entry:16 | Attempting to create audit log for user_id: 56af281b-9253-461a-8f26-27de34251fa2, action: Fetched user details
backend-1        | 2025-01-10 13:07:40 | DEBUG | app.models.tables:__init__:155 | AuditLog initialized for User ID: 56af281b-9253-461a-8f26-27de34251fa2, Action: Fetched user details
backend-1        | 2025-01-10 13:07:40 | INFO | app.utils.audit_log:create_audit_log_entry:34 | Audit log created successfully for user_id: 56af281b-9253-461a-8f26-27de34251fa2, action: Fetched user details
backend-1        | 2025-01-10 13:07:40 | DEBUG | app.models.database:get_db:26 | Database session yielded successfully.
backend-1        | 2025-01-10 13:07:40 | DEBUG | app.models.database:get_db:32 | Database session closed.
backend-1        | INFO:     172.21.0.1:50894 - "GET /users/user-details?token=402401c0-ac31-4635-91ec-326cf23b68b0 HTTP/1.1" 200 OK
backend-1        | 2025-01-10 13:07:40 | DEBUG | app.models.database:get_db:22 | Initializing database session.
backend-1        | 2025-01-10 13:07:40 | INFO | app.routes.users:request_password_reset:308 | Password reset request received for: vazanaitay3133@gmail.com
backend-1        | 2025-01-10 13:07:40 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:23 | Checking for SQL injection in input: vazanaitay3133@gmail.com
backend-1        | 2025-01-10 13:07:40 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:40 | SQL-safe input: Original: vazanaitay3133@gmail.com, Sanitized: vazanaitay3133@gmail.com
backend-1        | 2025-01-10 13:07:40 | DEBUG | app.models.tables:__init__:227 | PasswordReset model initialized for User ID: 56af281b-9253-461a-8f26-27de34251fa2
backend-1        | 2025-01-10 13:07:40 | INFO | app.utils.email:send_email:33 | Attempting to send email to ['vazanaitay3133@gmail.com']
backend-1        | 2025-01-10 13:07:42 | INFO | app.utils.email:send_email:40 | Email successfully sent to ['vazanaitay3133@gmail.com']
backend-1        | 2025-01-10 13:07:42 | INFO | app.routes.users:request_password_reset:372 | Password reset email sent to vazanaitay3133@gmail.com
backend-1        | 2025-01-10 13:07:42 | DEBUG | app.models.database:get_db:26 | Database session yielded successfully.
backend-1        | 2025-01-10 13:07:42 | DEBUG | app.models.database:get_db:32 | Database session closed.
backend-1        | INFO:     172.21.0.1:50908 - "POST /users/password-reset HTTP/1.1" 200 OK
backend-1        | 2025-01-10 13:07:53 | DEBUG | app.models.database:get_db:22 | Initializing database session.
backend-1        | 2025-01-10 13:07:53 | INFO | app.routes.users:reset_password:391 | Password reset attempt with token: 00fe4fd2-347a-46af-980d-ca700308d29c
backend-1        | 2025-01-10 13:07:53 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:23 | Checking for SQL injection in input: 00fe4fd2-347a-46af-980d-ca700308d29c
backend-1        | 2025-01-10 13:07:53 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:40 | SQL-safe input: Original: 00fe4fd2-347a-46af-980d-ca700308d29c, Sanitized: 00fe4fd2-347a-46af-980d-ca700308d29c
backend-1        | 2025-01-10 13:07:53 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: NewPassword123!
backend-1        | 2025-01-10 13:07:53 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: NewPassword123!, Sanitized: NewPassword123!
backend-1        | 2025-01-10 13:07:53 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: NewPassword123!
backend-1        | 2025-01-10 13:07:53 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: NewPassword123!, Sanitized: NewPassword123!
backend-1        | 2025-01-10 13:07:53 | INFO | app.utils.audit_log:create_audit_log_entry:16 | Attempting to create audit log for user_id: 56af281b-9253-461a-8f26-27de34251fa2, action: Password reset successful
backend-1        | 2025-01-10 13:07:53 | DEBUG | app.models.tables:__init__:155 | AuditLog initialized for User ID: 56af281b-9253-461a-8f26-27de34251fa2, Action: Password reset successful
backend-1        | 2025-01-10 13:07:53 | INFO | app.utils.audit_log:create_audit_log_entry:34 | Audit log created successfully for user_id: 56af281b-9253-461a-8f26-27de34251fa2, action: Password reset successful
backend-1        | 2025-01-10 13:07:53 | DEBUG | app.models.database:get_db:26 | Database session yielded successfully.
backend-1        | 2025-01-10 13:07:53 | DEBUG | app.models.database:get_db:32 | Database session closed.
backend-1        | INFO:     172.21.0.1:45914 - "POST /users/reset-password HTTP/1.1" 200 OK
backend-1        | 2025-01-10 13:07:53 | DEBUG | app.models.database:get_db:22 | Initializing database session.
backend-1        | 2025-01-10 13:07:53 | INFO | app.routes.users:update_user:240 | Update request received for user: 56af281b-9253-461a-8f26-27de34251fa2
backend-1        | 2025-01-10 13:07:53 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:23 | Checking for SQL injection in input: 56af281b-9253-461a-8f26-27de34251fa2
backend-1        | 2025-01-10 13:07:53 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:40 | SQL-safe input: Original: 56af281b-9253-461a-8f26-27de34251fa2, Sanitized: 56af281b-9253-461a-8f26-27de34251fa2
backend-1        | 2025-01-10 13:07:53 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: 56af281b-9253-461a-8f26-27de34251fa2
backend-1        | 2025-01-10 13:07:53 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: 56af281b-9253-461a-8f26-27de34251fa2, Sanitized: 56af281b-9253-461a-8f26-27de34251fa2
backend-1        | 2025-01-10 13:07:53 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: John Updated
backend-1        | 2025-01-10 13:07:53 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: John Updated, Sanitized: John Updated
backend-1        | 2025-01-10 13:07:53 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: 0541122334
backend-1        | 2025-01-10 13:07:53 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: 0541122334, Sanitized: 0541122334
backend-1        | 2025-01-10 13:07:53 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:23 | Checking for SQL injection in input: johnupdated@example.com
backend-1        | 2025-01-10 13:07:53 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:40 | SQL-safe input: Original: johnupdated@example.com, Sanitized: johnupdated@example.com
backend-1        | 2025-01-10 13:07:53 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: johnupdated@example.com
backend-1        | 2025-01-10 13:07:53 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: johnupdated@example.com, Sanitized: johnupdated@example.com
backend-1        | 2025-01-10 13:07:53 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: Male
backend-1        | 2025-01-10 13:07:53 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: Male, Sanitized: Male
backend-1        | 2025-01-10 13:07:53 | INFO | app.utils.audit_log:create_audit_log_entry:16 | Attempting to create audit log for user_id: 56af281b-9253-461a-8f26-27de34251fa2, action: Updated user details
backend-1        | 2025-01-10 13:07:53 | DEBUG | app.models.tables:__init__:155 | AuditLog initialized for User ID: 56af281b-9253-461a-8f26-27de34251fa2, Action: Updated user details
backend-1        | 2025-01-10 13:07:53 | INFO | app.utils.audit_log:create_audit_log_entry:34 | Audit log created successfully for user_id: 56af281b-9253-461a-8f26-27de34251fa2, action: Updated user details
backend-1        | 2025-01-10 13:07:53 | INFO | app.routes.users:update_user:288 | User updated successfully: 56af281b-9253-461a-8f26-27de34251fa2
backend-1        | 2025-01-10 13:07:53 | DEBUG | app.models.database:get_db:26 | Database session yielded successfully.
backend-1        | 2025-01-10 13:07:53 | DEBUG | app.models.database:get_db:32 | Database session closed.
backend-1        | INFO:     172.21.0.1:45922 - "PUT /users/56af281b-9253-461a-8f26-27de34251fa2 HTTP/1.1" 200 OK
backend-1        | 2025-01-10 13:07:53 | DEBUG | app.models.database:get_db:22 | Initializing database session.
backend-1        | 2025-01-10 13:07:53 | INFO | app.routes.users:logout:444 | Logout request received with token: 402401c0-ac31-4635-91ec-326cf23b68b0
backend-1        | 2025-01-10 13:07:53 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:23 | Checking for SQL injection in input: 402401c0-ac31-4635-91ec-326cf23b68b0
backend-1        | 2025-01-10 13:07:53 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:40 | SQL-safe input: Original: 402401c0-ac31-4635-91ec-326cf23b68b0, Sanitized: 402401c0-ac31-4635-91ec-326cf23b68b0
backend-1        | 2025-01-10 13:07:53 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: 402401c0-ac31-4635-91ec-326cf23b68b0
backend-1        | 2025-01-10 13:07:53 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: 402401c0-ac31-4635-91ec-326cf23b68b0, Sanitized: 402401c0-ac31-4635-91ec-326cf23b68b0
backend-1        | 2025-01-10 13:07:53 | INFO | app.utils.audit_log:create_audit_log_entry:16 | Attempting to create audit log for user_id: 56af281b-9253-461a-8f26-27de34251fa2, action: User logout
backend-1        | 2025-01-10 13:07:53 | DEBUG | app.models.tables:__init__:155 | AuditLog initialized for User ID: 56af281b-9253-461a-8f26-27de34251fa2, Action: User logout
backend-1        | 2025-01-10 13:07:53 | INFO | app.utils.audit_log:create_audit_log_entry:34 | Audit log created successfully for user_id: 56af281b-9253-461a-8f26-27de34251fa2, action: User logout
backend-1        | 2025-01-10 13:07:53 | INFO | app.routes.users:logout:463 | User 56af281b-9253-461a-8f26-27de34251fa2 successfully logged out
backend-1        | 2025-01-10 13:07:53 | DEBUG | app.models.database:get_db:26 | Database session yielded successfully.
backend-1        | 2025-01-10 13:07:53 | DEBUG | app.models.database:get_db:32 | Database session closed.
backend-1        | INFO:     172.21.0.1:45932 - "POST /users/logout HTTP/1.1" 200 OK
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.models.database:get_db:22 | Initializing database session.
backend-1        | 2025-01-10 13:08:06 | INFO | app.routes.users:register:140 | Registration request received for: michaeljohnson123
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:23 | Checking for SQL injection in input: michaeljohnson123
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:40 | SQL-safe input: Original: michaeljohnson123, Sanitized: michaeljohnson123
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: michaeljohnson123
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: michaeljohnson123, Sanitized: michaeljohnson123
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:23 | Checking for SQL injection in input: michaeljohnson@example.com
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:40 | SQL-safe input: Original: michaeljohnson@example.com, Sanitized: michaeljohnson@example.com
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: michaeljohnson@example.com
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: michaeljohnson@example.com, Sanitized: michaeljohnson@example.com
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: SecureMichael123!
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: SecureMichael123!, Sanitized: SecureMichael123!
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: SecureMichael123!
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: SecureMichael123!, Sanitized: SecureMichael123!
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: Michael Johnson
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: Michael Johnson, Sanitized: Michael Johnson
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: 0549876543
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: 0549876543, Sanitized: 0549876543
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: Male
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: Male, Sanitized: Male
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.models.tables:__init__:73 | User model initialized: michaeljohnson123, Email: michaeljohnson@example.com
backend-1        | 2025-01-10 13:08:06 | INFO | app.utils.audit_log:create_audit_log_entry:16 | Attempting to create audit log for user_id: a35a1bf2-47e4-4d7f-9558-14ffea8d96df, action: User registration
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.models.tables:__init__:155 | AuditLog initialized for User ID: a35a1bf2-47e4-4d7f-9558-14ffea8d96df, Action: User registration
backend-1        | 2025-01-10 13:08:06 | INFO | app.utils.audit_log:create_audit_log_entry:34 | Audit log created successfully for user_id: a35a1bf2-47e4-4d7f-9558-14ffea8d96df, action: User registration
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.models.database:get_db:26 | Database session yielded successfully.
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.models.database:get_db:32 | Database session closed.
backend-1        | INFO:     172.21.0.1:38904 - "POST /users/register HTTP/1.1" 200 OK
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.models.database:get_db:22 | Initializing database session.
backend-1        | 2025-01-10 13:08:06 | INFO | app.routes.users:login:98 | Login request received for: michaeljohnson@example.com
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:23 | Checking for SQL injection in input: michaeljohnson@example.com
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:40 | SQL-safe input: Original: michaeljohnson@example.com, Sanitized: michaeljohnson@example.com
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: michaeljohnson@example.com
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: michaeljohnson@example.com, Sanitized: michaeljohnson@example.com
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: SecureMichael123!
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: SecureMichael123!, Sanitized: SecureMichael123!
backend-1        | 2025-01-10 13:08:06 | INFO | app.utils.audit_log:create_audit_log_entry:16 | Attempting to create audit log for user_id: a35a1bf2-47e4-4d7f-9558-14ffea8d96df, action: User login
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.models.tables:__init__:155 | AuditLog initialized for User ID: a35a1bf2-47e4-4d7f-9558-14ffea8d96df, Action: User login
backend-1        | 2025-01-10 13:08:06 | INFO | app.utils.audit_log:create_audit_log_entry:34 | Audit log created successfully for user_id: a35a1bf2-47e4-4d7f-9558-14ffea8d96df, action: User login
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.models.database:get_db:26 | Database session yielded successfully.
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.models.database:get_db:32 | Database session closed.
backend-1        | INFO:     172.21.0.1:38908 - "POST /users/login HTTP/1.1" 200 OK
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.models.database:get_db:22 | Initializing database session.
backend-1        | 2025-01-10 13:08:06 | INFO | app.routes.customers:create_customer:109 | Creating customer for user: a35a1bf2-47e4-4d7f-9558-14ffea8d96df
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:23 | Checking for SQL injection in input: a35a1bf2-47e4-4d7f-9558-14ffea8d96df
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:40 | SQL-safe input: Original: a35a1bf2-47e4-4d7f-9558-14ffea8d96df, Sanitized: a35a1bf2-47e4-4d7f-9558-14ffea8d96df
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: a35a1bf2-47e4-4d7f-9558-14ffea8d96df
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: a35a1bf2-47e4-4d7f-9558-14ffea8d96df, Sanitized: a35a1bf2-47e4-4d7f-9558-14ffea8d96df
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: Sophia
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: Sophia, Sanitized: Sophia
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: Anderson
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: Anderson, Sanitized: Anderson
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: 0541112233
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: 0541112233, Sanitized: 0541112233
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: sophia.anderson@example.com
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: sophia.anderson@example.com, Sanitized: sophia.anderson@example.com
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: 123 Dreamland Ave
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: 123 Dreamland Ave, Sanitized: 123 Dreamland Ave
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:23 | Checking for SQL injection in input: pak-1
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:40 | SQL-safe input: Original: pak-1, Sanitized: pak-1
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: pak-1
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: pak-1, Sanitized: pak-1
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: Female
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: Female, Sanitized: Female
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.models.tables:__init__:105 | Customer model initialized: Sophia Anderson, Email: sophia.anderson@example.com
backend-1        | 2025-01-10 13:08:06 | INFO | app.utils.audit_log:create_audit_log_entry:16 | Attempting to create audit log for user_id: a35a1bf2-47e4-4d7f-9558-14ffea8d96df, action: Created customer cust-1
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.models.tables:__init__:155 | AuditLog initialized for User ID: a35a1bf2-47e4-4d7f-9558-14ffea8d96df, Action: Created customer cust-1
backend-1        | 2025-01-10 13:08:06 | INFO | app.utils.audit_log:create_audit_log_entry:34 | Audit log created successfully for user_id: a35a1bf2-47e4-4d7f-9558-14ffea8d96df, action: Created customer cust-1
backend-1        | 2025-01-10 13:08:06 | INFO | app.routes.customers:create_customer:152 | Customer created successfully: cust-1
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.models.database:get_db:26 | Database session yielded successfully.
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.models.database:get_db:32 | Database session closed.
backend-1        | INFO:     172.21.0.1:38918 - "POST /customers/ HTTP/1.1" 200 OK
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.models.database:get_db:22 | Initializing database session.
backend-1        | 2025-01-10 13:08:06 | INFO | app.routes.customers:create_customer:109 | Creating customer for user: a35a1bf2-47e4-4d7f-9558-14ffea8d96df
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:23 | Checking for SQL injection in input: a35a1bf2-47e4-4d7f-9558-14ffea8d96df
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:40 | SQL-safe input: Original: a35a1bf2-47e4-4d7f-9558-14ffea8d96df, Sanitized: a35a1bf2-47e4-4d7f-9558-14ffea8d96df
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: a35a1bf2-47e4-4d7f-9558-14ffea8d96df
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: a35a1bf2-47e4-4d7f-9558-14ffea8d96df, Sanitized: a35a1bf2-47e4-4d7f-9558-14ffea8d96df
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: Liam
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: Liam, Sanitized: Liam
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: Thompson
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: Thompson, Sanitized: Thompson
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: 0542223344
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: 0542223344, Sanitized: 0542223344
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: liam.thompson@example.com
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: liam.thompson@example.com, Sanitized: liam.thompson@example.com
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: 456 Builder St
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: 456 Builder St, Sanitized: 456 Builder St
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:23 | Checking for SQL injection in input: pak-2
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:40 | SQL-safe input: Original: pak-2, Sanitized: pak-2
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: pak-2
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: pak-2, Sanitized: pak-2
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: Male
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: Male, Sanitized: Male
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.models.tables:__init__:105 | Customer model initialized: Liam Thompson, Email: liam.thompson@example.com
backend-1        | 2025-01-10 13:08:06 | INFO | app.utils.audit_log:create_audit_log_entry:16 | Attempting to create audit log for user_id: a35a1bf2-47e4-4d7f-9558-14ffea8d96df, action: Created customer cust-2
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.models.tables:__init__:155 | AuditLog initialized for User ID: a35a1bf2-47e4-4d7f-9558-14ffea8d96df, Action: Created customer cust-2
backend-1        | 2025-01-10 13:08:06 | INFO | app.utils.audit_log:create_audit_log_entry:34 | Audit log created successfully for user_id: a35a1bf2-47e4-4d7f-9558-14ffea8d96df, action: Created customer cust-2
backend-1        | 2025-01-10 13:08:06 | INFO | app.routes.customers:create_customer:152 | Customer created successfully: cust-2
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.models.database:get_db:26 | Database session yielded successfully.
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.models.database:get_db:32 | Database session closed.
backend-1        | INFO:     172.21.0.1:38920 - "POST /customers/ HTTP/1.1" 200 OK
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.models.database:get_db:22 | Initializing database session.
backend-1        | 2025-01-10 13:08:06 | INFO | app.routes.customers:create_customer:109 | Creating customer for user: a35a1bf2-47e4-4d7f-9558-14ffea8d96df
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:23 | Checking for SQL injection in input: a35a1bf2-47e4-4d7f-9558-14ffea8d96df
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:40 | SQL-safe input: Original: a35a1bf2-47e4-4d7f-9558-14ffea8d96df, Sanitized: a35a1bf2-47e4-4d7f-9558-14ffea8d96df
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: a35a1bf2-47e4-4d7f-9558-14ffea8d96df
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: a35a1bf2-47e4-4d7f-9558-14ffea8d96df, Sanitized: a35a1bf2-47e4-4d7f-9558-14ffea8d96df
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: Olivia
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: Olivia, Sanitized: Olivia
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: Taylor
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: Taylor, Sanitized: Taylor
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: 0543334455
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: 0543334455, Sanitized: 0543334455
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: olivia.taylor@example.com
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: olivia.taylor@example.com, Sanitized: olivia.taylor@example.com
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: 789 Artistic Blvd
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: 789 Artistic Blvd, Sanitized: 789 Artistic Blvd
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:23 | Checking for SQL injection in input: pak-3
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:40 | SQL-safe input: Original: pak-3, Sanitized: pak-3
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: pak-3
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: pak-3, Sanitized: pak-3
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: Other
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: Other, Sanitized: Other
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.models.tables:__init__:105 | Customer model initialized: Olivia Taylor, Email: olivia.taylor@example.com
backend-1        | 2025-01-10 13:08:06 | INFO | app.utils.audit_log:create_audit_log_entry:16 | Attempting to create audit log for user_id: a35a1bf2-47e4-4d7f-9558-14ffea8d96df, action: Created customer cust-3
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.models.tables:__init__:155 | AuditLog initialized for User ID: a35a1bf2-47e4-4d7f-9558-14ffea8d96df, Action: Created customer cust-3
backend-1        | 2025-01-10 13:08:06 | INFO | app.utils.audit_log:create_audit_log_entry:34 | Audit log created successfully for user_id: a35a1bf2-47e4-4d7f-9558-14ffea8d96df, action: Created customer cust-3
backend-1        | 2025-01-10 13:08:06 | INFO | app.routes.customers:create_customer:152 | Customer created successfully: cust-3
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.models.database:get_db:26 | Database session yielded successfully.
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.models.database:get_db:32 | Database session closed.
backend-1        | INFO:     172.21.0.1:38934 - "POST /customers/ HTTP/1.1" 200 OK
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.models.database:get_db:22 | Initializing database session.
backend-1        | 2025-01-10 13:08:06 | INFO | app.routes.customers:get_customers:59 | Fetching all customers for user: a35a1bf2-47e4-4d7f-9558-14ffea8d96df
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:23 | Checking for SQL injection in input: a35a1bf2-47e4-4d7f-9558-14ffea8d96df
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:40 | SQL-safe input: Original: a35a1bf2-47e4-4d7f-9558-14ffea8d96df, Sanitized: a35a1bf2-47e4-4d7f-9558-14ffea8d96df
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: a35a1bf2-47e4-4d7f-9558-14ffea8d96df
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: a35a1bf2-47e4-4d7f-9558-14ffea8d96df, Sanitized: a35a1bf2-47e4-4d7f-9558-14ffea8d96df
backend-1        | 2025-01-10 13:08:06 | INFO | app.utils.audit_log:create_audit_log_entry:16 | Attempting to create audit log for user_id: a35a1bf2-47e4-4d7f-9558-14ffea8d96df, action: Fetched all customers
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.models.tables:__init__:155 | AuditLog initialized for User ID: a35a1bf2-47e4-4d7f-9558-14ffea8d96df, Action: Fetched all customers
backend-1        | 2025-01-10 13:08:06 | INFO | app.utils.audit_log:create_audit_log_entry:34 | Audit log created successfully for user_id: a35a1bf2-47e4-4d7f-9558-14ffea8d96df, action: Fetched all customers
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.routes.customers:get_customers:72 | Fetched 3 customers for user: a35a1bf2-47e4-4d7f-9558-14ffea8d96df
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.models.database:get_db:26 | Database session yielded successfully.
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.models.database:get_db:32 | Database session closed.
backend-1        | INFO:     172.21.0.1:38948 - "GET /customers/ HTTP/1.1" 200 OK
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.models.database:get_db:22 | Initializing database session.
backend-1        | 2025-01-10 13:08:06 | INFO | app.routes.customers:get_customer:83 | Fetching customer with ID: cust-1
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:23 | Checking for SQL injection in input: cust-1
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:40 | SQL-safe input: Original: cust-1, Sanitized: cust-1
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: cust-1
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: cust-1, Sanitized: cust-1
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:23 | Checking for SQL injection in input: a35a1bf2-47e4-4d7f-9558-14ffea8d96df
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:40 | SQL-safe input: Original: a35a1bf2-47e4-4d7f-9558-14ffea8d96df, Sanitized: a35a1bf2-47e4-4d7f-9558-14ffea8d96df
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: a35a1bf2-47e4-4d7f-9558-14ffea8d96df
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: a35a1bf2-47e4-4d7f-9558-14ffea8d96df, Sanitized: a35a1bf2-47e4-4d7f-9558-14ffea8d96df
backend-1        | 2025-01-10 13:08:06 | INFO | app.utils.audit_log:create_audit_log_entry:16 | Attempting to create audit log for user_id: a35a1bf2-47e4-4d7f-9558-14ffea8d96df, action: Fetched customer cust-1
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.models.tables:__init__:155 | AuditLog initialized for User ID: a35a1bf2-47e4-4d7f-9558-14ffea8d96df, Action: Fetched customer cust-1
backend-1        | 2025-01-10 13:08:06 | INFO | app.utils.audit_log:create_audit_log_entry:34 | Audit log created successfully for user_id: a35a1bf2-47e4-4d7f-9558-14ffea8d96df, action: Fetched customer cust-1
backend-1        | 2025-01-10 13:08:06 | INFO | app.routes.customers:get_customer:98 | Customer fetched successfully: cust-1
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.models.database:get_db:26 | Database session yielded successfully.
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.models.database:get_db:32 | Database session closed.
backend-1        | INFO:     172.21.0.1:38956 - "GET /customers/cust-1 HTTP/1.1" 200 OK
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.models.database:get_db:22 | Initializing database session.
backend-1        | 2025-01-10 13:08:06 | INFO | app.routes.customers:get_customer:83 | Fetching customer with ID: cust-2
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:23 | Checking for SQL injection in input: cust-2
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:40 | SQL-safe input: Original: cust-2, Sanitized: cust-2
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: cust-2
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: cust-2, Sanitized: cust-2
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:23 | Checking for SQL injection in input: a35a1bf2-47e4-4d7f-9558-14ffea8d96df
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:40 | SQL-safe input: Original: a35a1bf2-47e4-4d7f-9558-14ffea8d96df, Sanitized: a35a1bf2-47e4-4d7f-9558-14ffea8d96df
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: a35a1bf2-47e4-4d7f-9558-14ffea8d96df
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: a35a1bf2-47e4-4d7f-9558-14ffea8d96df, Sanitized: a35a1bf2-47e4-4d7f-9558-14ffea8d96df
backend-1        | 2025-01-10 13:08:06 | INFO | app.utils.audit_log:create_audit_log_entry:16 | Attempting to create audit log for user_id: a35a1bf2-47e4-4d7f-9558-14ffea8d96df, action: Fetched customer cust-2
backend-1        | 2025-01-10 13:08:06 | DEBUG | app.models.tables:__init__:155 | AuditLog initialized for User ID: a35a1bf2-47e4-4d7f-9558-14ffea8d96df, Action: Fetched customer cust-2
backend-1        | 2025-01-10 13:08:07 | INFO | app.utils.audit_log:create_audit_log_entry:34 | Audit log created successfully for user_id: a35a1bf2-47e4-4d7f-9558-14ffea8d96df, action: Fetched customer cust-2
backend-1        | 2025-01-10 13:08:07 | INFO | app.routes.customers:get_customer:98 | Customer fetched successfully: cust-2
backend-1        | 2025-01-10 13:08:07 | DEBUG | app.models.database:get_db:26 | Database session yielded successfully.
backend-1        | 2025-01-10 13:08:07 | DEBUG | app.models.database:get_db:32 | Database session closed.
backend-1        | INFO:     172.21.0.1:38958 - "GET /customers/cust-2 HTTP/1.1" 200 OK
backend-1        | 2025-01-10 13:08:07 | DEBUG | app.models.database:get_db:22 | Initializing database session.
backend-1        | 2025-01-10 13:08:07 | INFO | app.routes.customers:get_customer:83 | Fetching customer with ID: cust-3
backend-1        | 2025-01-10 13:08:07 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:23 | Checking for SQL injection in input: cust-3
backend-1        | 2025-01-10 13:08:07 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:40 | SQL-safe input: Original: cust-3, Sanitized: cust-3
backend-1        | 2025-01-10 13:08:07 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: cust-3
backend-1        | 2025-01-10 13:08:07 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: cust-3, Sanitized: cust-3
backend-1        | 2025-01-10 13:08:07 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:23 | Checking for SQL injection in input: a35a1bf2-47e4-4d7f-9558-14ffea8d96df
backend-1        | 2025-01-10 13:08:07 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:40 | SQL-safe input: Original: a35a1bf2-47e4-4d7f-9558-14ffea8d96df, Sanitized: a35a1bf2-47e4-4d7f-9558-14ffea8d96df
backend-1        | 2025-01-10 13:08:07 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: a35a1bf2-47e4-4d7f-9558-14ffea8d96df
backend-1        | 2025-01-10 13:08:07 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: a35a1bf2-47e4-4d7f-9558-14ffea8d96df, Sanitized: a35a1bf2-47e4-4d7f-9558-14ffea8d96df
backend-1        | 2025-01-10 13:08:07 | INFO | app.utils.audit_log:create_audit_log_entry:16 | Attempting to create audit log for user_id: a35a1bf2-47e4-4d7f-9558-14ffea8d96df, action: Fetched customer cust-3
backend-1        | 2025-01-10 13:08:07 | DEBUG | app.models.tables:__init__:155 | AuditLog initialized for User ID: a35a1bf2-47e4-4d7f-9558-14ffea8d96df, Action: Fetched customer cust-3
backend-1        | 2025-01-10 13:08:07 | INFO | app.utils.audit_log:create_audit_log_entry:34 | Audit log created successfully for user_id: a35a1bf2-47e4-4d7f-9558-14ffea8d96df, action: Fetched customer cust-3
backend-1        | 2025-01-10 13:08:07 | INFO | app.routes.customers:get_customer:98 | Customer fetched successfully: cust-3
backend-1        | 2025-01-10 13:08:07 | DEBUG | app.models.database:get_db:26 | Database session yielded successfully.
backend-1        | 2025-01-10 13:08:07 | DEBUG | app.models.database:get_db:32 | Database session closed.
backend-1        | INFO:     172.21.0.1:38972 - "GET /customers/cust-3 HTTP/1.1" 200 OK
backend-1        | 2025-01-10 13:08:07 | DEBUG | app.models.database:get_db:22 | Initializing database session.
backend-1        | 2025-01-10 13:08:07 | INFO | app.routes.customers:update_customer:164 | Updating customer with ID: cust-1
backend-1        | 2025-01-10 13:08:07 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:23 | Checking for SQL injection in input: cust-1
backend-1        | 2025-01-10 13:08:07 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:40 | SQL-safe input: Original: cust-1, Sanitized: cust-1
backend-1        | 2025-01-10 13:08:07 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: cust-1
backend-1        | 2025-01-10 13:08:07 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: cust-1, Sanitized: cust-1
backend-1        | 2025-01-10 13:08:07 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:23 | Checking for SQL injection in input: a35a1bf2-47e4-4d7f-9558-14ffea8d96df
backend-1        | 2025-01-10 13:08:07 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:40 | SQL-safe input: Original: a35a1bf2-47e4-4d7f-9558-14ffea8d96df, Sanitized: a35a1bf2-47e4-4d7f-9558-14ffea8d96df
backend-1        | 2025-01-10 13:08:07 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: a35a1bf2-47e4-4d7f-9558-14ffea8d96df
backend-1        | 2025-01-10 13:08:07 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: a35a1bf2-47e4-4d7f-9558-14ffea8d96df, Sanitized: a35a1bf2-47e4-4d7f-9558-14ffea8d96df
backend-1        | 2025-01-10 13:08:07 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: Updated First Name
backend-1        | 2025-01-10 13:08:07 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: Updated First Name, Sanitized: Updated First Name
backend-1        | 2025-01-10 13:08:07 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: Updated Last Name
backend-1        | 2025-01-10 13:08:07 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: Updated Last Name, Sanitized: Updated Last Name
backend-1        | 2025-01-10 13:08:07 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: 5550000000
backend-1        | 2025-01-10 13:08:07 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: 5550000000, Sanitized: 5550000000
backend-1        | 2025-01-10 13:08:07 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: updatedemail@example.com
backend-1        | 2025-01-10 13:08:07 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: updatedemail@example.com, Sanitized: updatedemail@example.com
backend-1        | 2025-01-10 13:08:07 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: Updated Address
backend-1        | 2025-01-10 13:08:07 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: Updated Address, Sanitized: Updated Address
backend-1        | 2025-01-10 13:08:07 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: Other
backend-1        | 2025-01-10 13:08:07 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: Other, Sanitized: Other
backend-1        | 2025-01-10 13:08:07 | INFO | app.utils.audit_log:create_audit_log_entry:16 | Attempting to create audit log for user_id: a35a1bf2-47e4-4d7f-9558-14ffea8d96df, action: Updated customer cust-1
backend-1        | 2025-01-10 13:08:07 | DEBUG | app.models.tables:__init__:155 | AuditLog initialized for User ID: a35a1bf2-47e4-4d7f-9558-14ffea8d96df, Action: Updated customer cust-1
backend-1        | 2025-01-10 13:08:07 | INFO | app.utils.audit_log:create_audit_log_entry:34 | Audit log created successfully for user_id: a35a1bf2-47e4-4d7f-9558-14ffea8d96df, action: Updated customer cust-1
backend-1        | 2025-01-10 13:08:07 | INFO | app.routes.customers:update_customer:208 | Customer updated successfully: cust-1
backend-1        | 2025-01-10 13:08:07 | DEBUG | app.models.database:get_db:26 | Database session yielded successfully.
backend-1        | 2025-01-10 13:08:07 | DEBUG | app.models.database:get_db:32 | Database session closed.
backend-1        | INFO:     172.21.0.1:38974 - "PUT /customers/update_customer/cust-1 HTTP/1.1" 200 OK
backend-1        | 2025-01-10 13:08:07 | DEBUG | app.models.database:get_db:22 | Initializing database session.
backend-1        | 2025-01-10 13:08:07 | INFO | app.routes.customers:delete_customer:220 | Deleting customer with ID: cust-3
backend-1        | 2025-01-10 13:08:07 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:23 | Checking for SQL injection in input: cust-3
backend-1        | 2025-01-10 13:08:07 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:40 | SQL-safe input: Original: cust-3, Sanitized: cust-3
backend-1        | 2025-01-10 13:08:07 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: cust-3
backend-1        | 2025-01-10 13:08:07 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: cust-3, Sanitized: cust-3
backend-1        | 2025-01-10 13:08:07 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:23 | Checking for SQL injection in input: a35a1bf2-47e4-4d7f-9558-14ffea8d96df
backend-1        | 2025-01-10 13:08:07 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:40 | SQL-safe input: Original: a35a1bf2-47e4-4d7f-9558-14ffea8d96df, Sanitized: a35a1bf2-47e4-4d7f-9558-14ffea8d96df
backend-1        | 2025-01-10 13:08:07 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: a35a1bf2-47e4-4d7f-9558-14ffea8d96df
backend-1        | 2025-01-10 13:08:07 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: a35a1bf2-47e4-4d7f-9558-14ffea8d96df, Sanitized: a35a1bf2-47e4-4d7f-9558-14ffea8d96df
backend-1        | 2025-01-10 13:08:07 | INFO | app.utils.audit_log:create_audit_log_entry:16 | Attempting to create audit log for user_id: a35a1bf2-47e4-4d7f-9558-14ffea8d96df, action: Deleted customer cust-3
backend-1        | 2025-01-10 13:08:07 | DEBUG | app.models.tables:__init__:155 | AuditLog initialized for User ID: a35a1bf2-47e4-4d7f-9558-14ffea8d96df, Action: Deleted customer cust-3
backend-1        | 2025-01-10 13:08:07 | INFO | app.utils.audit_log:create_audit_log_entry:34 | Audit log created successfully for user_id: a35a1bf2-47e4-4d7f-9558-14ffea8d96df, action: Deleted customer cust-3
backend-1        | 2025-01-10 13:08:07 | INFO | app.routes.customers:delete_customer:243 | Customer deleted successfully: cust-3
backend-1        | 2025-01-10 13:08:07 | DEBUG | app.models.database:get_db:26 | Database session yielded successfully.
backend-1        | 2025-01-10 13:08:07 | DEBUG | app.models.database:get_db:32 | Database session closed.
backend-1        | INFO:     172.21.0.1:38978 - "DELETE /customers/delete_customer/cust-3 HTTP/1.1" 200 OK
backend-1        | 2025-01-10 13:08:07 | DEBUG | app.models.database:get_db:22 | Initializing database session.
backend-1        | 2025-01-10 13:08:07 | INFO | app.routes.users:logout:444 | Logout request received with token: 5a7a7b02-65a2-4ff7-b475-590ce0079639
backend-1        | 2025-01-10 13:08:07 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:23 | Checking for SQL injection in input: 5a7a7b02-65a2-4ff7-b475-590ce0079639
backend-1        | 2025-01-10 13:08:07 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:40 | SQL-safe input: Original: 5a7a7b02-65a2-4ff7-b475-590ce0079639, Sanitized: 5a7a7b02-65a2-4ff7-b475-590ce0079639
backend-1        | 2025-01-10 13:08:07 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: 5a7a7b02-65a2-4ff7-b475-590ce0079639
backend-1        | 2025-01-10 13:08:07 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: 5a7a7b02-65a2-4ff7-b475-590ce0079639, Sanitized: 5a7a7b02-65a2-4ff7-b475-590ce0079639
backend-1        | 2025-01-10 13:08:07 | INFO | app.utils.audit_log:create_audit_log_entry:16 | Attempting to create audit log for user_id: a35a1bf2-47e4-4d7f-9558-14ffea8d96df, action: User logout
backend-1        | 2025-01-10 13:08:07 | DEBUG | app.models.tables:__init__:155 | AuditLog initialized for User ID: a35a1bf2-47e4-4d7f-9558-14ffea8d96df, Action: User logout
backend-1        | 2025-01-10 13:08:07 | INFO | app.utils.audit_log:create_audit_log_entry:34 | Audit log created successfully for user_id: a35a1bf2-47e4-4d7f-9558-14ffea8d96df, action: User logout
backend-1        | 2025-01-10 13:08:07 | INFO | app.routes.users:logout:463 | User a35a1bf2-47e4-4d7f-9558-14ffea8d96df successfully logged out
backend-1        | 2025-01-10 13:08:07 | DEBUG | app.models.database:get_db:26 | Database session yielded successfully.
backend-1        | 2025-01-10 13:08:07 | DEBUG | app.models.database:get_db:32 | Database session closed.
backend-1        | INFO:     172.21.0.1:38992 - "POST /users/logout HTTP/1.1" 200 OK
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.models.database:get_db:22 | Initializing database session.
backend-1        | 2025-01-10 13:08:13 | INFO | app.routes.users:register:140 | Registration request received for: alicejohnson123
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:23 | Checking for SQL injection in input: alicejohnson123
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:40 | SQL-safe input: Original: alicejohnson123, Sanitized: alicejohnson123
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: alicejohnson123
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: alicejohnson123, Sanitized: alicejohnson123
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:23 | Checking for SQL injection in input: alicejohnson@example.com
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:40 | SQL-safe input: Original: alicejohnson@example.com, Sanitized: alicejohnson@example.com
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: alicejohnson@example.com
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: alicejohnson@example.com, Sanitized: alicejohnson@example.com
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: AliceSecurePass123!
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: AliceSecurePass123!, Sanitized: AliceSecurePass123!
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: AliceSecurePass123!
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: AliceSecurePass123!, Sanitized: AliceSecurePass123!
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: Alice Johnson
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: Alice Johnson, Sanitized: Alice Johnson
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: 0541112233
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: 0541112233, Sanitized: 0541112233
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: Female
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: Female, Sanitized: Female
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.models.tables:__init__:73 | User model initialized: alicejohnson123, Email: alicejohnson@example.com
backend-1        | 2025-01-10 13:08:13 | INFO | app.utils.audit_log:create_audit_log_entry:16 | Attempting to create audit log for user_id: 71e7a0b1-4efa-4a29-aa09-62aba63dcc99, action: User registration
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.models.tables:__init__:155 | AuditLog initialized for User ID: 71e7a0b1-4efa-4a29-aa09-62aba63dcc99, Action: User registration
backend-1        | 2025-01-10 13:08:13 | INFO | app.utils.audit_log:create_audit_log_entry:34 | Audit log created successfully for user_id: 71e7a0b1-4efa-4a29-aa09-62aba63dcc99, action: User registration
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.models.database:get_db:26 | Database session yielded successfully.
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.models.database:get_db:32 | Database session closed.
backend-1        | INFO:     172.21.0.1:38994 - "POST /users/register HTTP/1.1" 200 OK
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.models.database:get_db:22 | Initializing database session.
backend-1        | 2025-01-10 13:08:13 | INFO | app.routes.users:login:98 | Login request received for: alicejohnson@example.com
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:23 | Checking for SQL injection in input: alicejohnson@example.com
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:40 | SQL-safe input: Original: alicejohnson@example.com, Sanitized: alicejohnson@example.com
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: alicejohnson@example.com
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: alicejohnson@example.com, Sanitized: alicejohnson@example.com
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: AliceSecurePass123!
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: AliceSecurePass123!, Sanitized: AliceSecurePass123!
backend-1        | 2025-01-10 13:08:13 | INFO | app.utils.audit_log:create_audit_log_entry:16 | Attempting to create audit log for user_id: 71e7a0b1-4efa-4a29-aa09-62aba63dcc99, action: User login
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.models.tables:__init__:155 | AuditLog initialized for User ID: 71e7a0b1-4efa-4a29-aa09-62aba63dcc99, Action: User login
backend-1        | 2025-01-10 13:08:13 | INFO | app.utils.audit_log:create_audit_log_entry:34 | Audit log created successfully for user_id: 71e7a0b1-4efa-4a29-aa09-62aba63dcc99, action: User login
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.models.database:get_db:26 | Database session yielded successfully.
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.models.database:get_db:32 | Database session closed.
backend-1        | INFO:     172.21.0.1:39004 - "POST /users/login HTTP/1.1" 200 OK
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.models.database:get_db:22 | Initializing database session.
backend-1        | 2025-01-10 13:08:13 | INFO | app.routes.packages:create_package:106 | Creating a new package for user: 71e7a0b1-4efa-4a29-aa09-62aba63dcc99
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:23 | Checking for SQL injection in input: 71e7a0b1-4efa-4a29-aa09-62aba63dcc99
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:40 | SQL-safe input: Original: 71e7a0b1-4efa-4a29-aa09-62aba63dcc99, Sanitized: 71e7a0b1-4efa-4a29-aa09-62aba63dcc99
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: 71e7a0b1-4efa-4a29-aa09-62aba63dcc99
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: 71e7a0b1-4efa-4a29-aa09-62aba63dcc99, Sanitized: 71e7a0b1-4efa-4a29-aa09-62aba63dcc99
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: Premium Package
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: Premium Package, Sanitized: Premium Package
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: A premium package with advanced features.
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: A premium package with advanced features., Sanitized: A premium package with advanced features.
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.models.tables:__init__:131 | Package model initialized: Premium Package, Price: 149.0
backend-1        | 2025-01-10 13:08:13 | INFO | app.utils.audit_log:create_audit_log_entry:16 | Attempting to create audit log for user_id: 71e7a0b1-4efa-4a29-aa09-62aba63dcc99, action: Created package pak-5
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.models.tables:__init__:155 | AuditLog initialized for User ID: 71e7a0b1-4efa-4a29-aa09-62aba63dcc99, Action: Created package pak-5
backend-1        | 2025-01-10 13:08:13 | INFO | app.utils.audit_log:create_audit_log_entry:34 | Audit log created successfully for user_id: 71e7a0b1-4efa-4a29-aa09-62aba63dcc99, action: Created package pak-5
backend-1        | 2025-01-10 13:08:13 | INFO | app.routes.packages:create_package:131 | Package created successfully: pak-5
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.models.database:get_db:26 | Database session yielded successfully.
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.models.database:get_db:32 | Database session closed.
backend-1        | INFO:     172.21.0.1:39008 - "POST /packages/new_package HTTP/1.1" 200 OK
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.models.database:get_db:22 | Initializing database session.
backend-1        | 2025-01-10 13:08:13 | INFO | app.routes.packages:get_packages:51 | Fetching all packages.
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.routes.packages:get_packages:58 | Fetched 5 packages.
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.models.database:get_db:26 | Database session yielded successfully.
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.models.database:get_db:32 | Database session closed.
backend-1        | INFO:     172.21.0.1:39014 - "GET /packages/ HTTP/1.1" 200 OK
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.models.database:get_db:22 | Initializing database session.
backend-1        | 2025-01-10 13:08:13 | INFO | app.routes.packages:update_package:149 | Attempting to update package with ID: pak-5
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:23 | Checking for SQL injection in input: pak-5
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:40 | SQL-safe input: Original: pak-5, Sanitized: pak-5
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: pak-5
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: pak-5, Sanitized: pak-5
backend-1        | 2025-01-10 13:08:13 | INFO | app.routes.packages:update_package:161 | Package found: <app.models.tables.Package object at 0x7fce82179970>
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: Updated Premium Package
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: Updated Premium Package, Sanitized: Updated Premium Package
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: Updated features for the premium package.
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: Updated features for the premium package., Sanitized: Updated features for the premium package.
backend-1        | 2025-01-10 13:08:13 | INFO | app.utils.audit_log:create_audit_log_entry:16 | Attempting to create audit log for user_id: 71e7a0b1-4efa-4a29-aa09-62aba63dcc99, action: Package pak-5 updated
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.models.tables:__init__:155 | AuditLog initialized for User ID: 71e7a0b1-4efa-4a29-aa09-62aba63dcc99, Action: Package pak-5 updated
backend-1        | 2025-01-10 13:08:13 | INFO | app.utils.audit_log:create_audit_log_entry:34 | Audit log created successfully for user_id: 71e7a0b1-4efa-4a29-aa09-62aba63dcc99, action: Package pak-5 updated
backend-1        | 2025-01-10 13:08:13 | INFO | app.routes.packages:update_package:179 | Package updated successfully: pak-5
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.models.database:get_db:26 | Database session yielded successfully.
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.models.database:get_db:32 | Database session closed.
backend-1        | INFO:     172.21.0.1:39024 - "PUT /packages/update_package/pak-5 HTTP/1.1" 200 OK
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.models.database:get_db:22 | Initializing database session.
backend-1        | 2025-01-10 13:08:13 | INFO | app.routes.packages:get_packages:51 | Fetching all packages.
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.routes.packages:get_packages:58 | Fetched 5 packages.
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.models.database:get_db:26 | Database session yielded successfully.
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.models.database:get_db:32 | Database session closed.
backend-1        | INFO:     172.21.0.1:39040 - "GET /packages/ HTTP/1.1" 200 OK
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.models.database:get_db:22 | Initializing database session.
backend-1        | 2025-01-10 13:08:13 | INFO | app.routes.packages:get_package:76 | Fetching package with ID: pak-5
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:23 | Checking for SQL injection in input: pak-5
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:40 | SQL-safe input: Original: pak-5, Sanitized: pak-5
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: pak-5
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: pak-5, Sanitized: pak-5
backend-1        | 2025-01-10 13:08:13 | INFO | app.routes.packages:get_package:88 | Package fetched successfully: pak-5
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.models.database:get_db:26 | Database session yielded successfully.
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.models.database:get_db:32 | Database session closed.
backend-1        | INFO:     172.21.0.1:39056 - "GET /packages/pak-5 HTTP/1.1" 200 OK
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.models.database:get_db:22 | Initializing database session.
backend-1        | 2025-01-10 13:08:13 | INFO | app.routes.packages:delete_package:204 | Deleting package with ID: pak-5
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:23 | Checking for SQL injection in input: pak-5
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:40 | SQL-safe input: Original: pak-5, Sanitized: pak-5
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: pak-5
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: pak-5, Sanitized: pak-5
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:23 | Checking for SQL injection in input: 71e7a0b1-4efa-4a29-aa09-62aba63dcc99
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:40 | SQL-safe input: Original: 71e7a0b1-4efa-4a29-aa09-62aba63dcc99, Sanitized: 71e7a0b1-4efa-4a29-aa09-62aba63dcc99
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: 71e7a0b1-4efa-4a29-aa09-62aba63dcc99
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: 71e7a0b1-4efa-4a29-aa09-62aba63dcc99, Sanitized: 71e7a0b1-4efa-4a29-aa09-62aba63dcc99
backend-1        | 2025-01-10 13:08:13 | INFO | app.utils.audit_log:create_audit_log_entry:16 | Attempting to create audit log for user_id: 71e7a0b1-4efa-4a29-aa09-62aba63dcc99, action: Deleted package pak-5
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.models.tables:__init__:155 | AuditLog initialized for User ID: 71e7a0b1-4efa-4a29-aa09-62aba63dcc99, Action: Deleted package pak-5
backend-1        | 2025-01-10 13:08:13 | INFO | app.utils.audit_log:create_audit_log_entry:34 | Audit log created successfully for user_id: 71e7a0b1-4efa-4a29-aa09-62aba63dcc99, action: Deleted package pak-5
backend-1        | 2025-01-10 13:08:13 | INFO | app.routes.packages:delete_package:222 | Package deleted successfully: pak-5
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.models.database:get_db:26 | Database session yielded successfully.
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.models.database:get_db:32 | Database session closed.
backend-1        | INFO:     172.21.0.1:39058 - "DELETE /packages/delete_package/pak-5 HTTP/1.1" 200 OK
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.models.database:get_db:22 | Initializing database session.
backend-1        | 2025-01-10 13:08:13 | INFO | app.routes.packages:get_packages:51 | Fetching all packages.
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.routes.packages:get_packages:58 | Fetched 4 packages.
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.models.database:get_db:26 | Database session yielded successfully.
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.models.database:get_db:32 | Database session closed.
backend-1        | INFO:     172.21.0.1:39068 - "GET /packages/ HTTP/1.1" 200 OK
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.models.database:get_db:22 | Initializing database session.
backend-1        | 2025-01-10 13:08:13 | INFO | app.routes.users:logout:444 | Logout request received with token: d52d2d68-fc8a-4bdd-8714-c325c8660bb3
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:23 | Checking for SQL injection in input: d52d2d68-fc8a-4bdd-8714-c325c8660bb3
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:40 | SQL-safe input: Original: d52d2d68-fc8a-4bdd-8714-c325c8660bb3, Sanitized: d52d2d68-fc8a-4bdd-8714-c325c8660bb3
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: d52d2d68-fc8a-4bdd-8714-c325c8660bb3
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: d52d2d68-fc8a-4bdd-8714-c325c8660bb3, Sanitized: d52d2d68-fc8a-4bdd-8714-c325c8660bb3
backend-1        | 2025-01-10 13:08:13 | INFO | app.utils.audit_log:create_audit_log_entry:16 | Attempting to create audit log for user_id: 71e7a0b1-4efa-4a29-aa09-62aba63dcc99, action: User logout
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.models.tables:__init__:155 | AuditLog initialized for User ID: 71e7a0b1-4efa-4a29-aa09-62aba63dcc99, Action: User logout
backend-1        | 2025-01-10 13:08:13 | INFO | app.utils.audit_log:create_audit_log_entry:34 | Audit log created successfully for user_id: 71e7a0b1-4efa-4a29-aa09-62aba63dcc99, action: User logout
backend-1        | 2025-01-10 13:08:13 | INFO | app.routes.users:logout:463 | User 71e7a0b1-4efa-4a29-aa09-62aba63dcc99 successfully logged out
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.models.database:get_db:26 | Database session yielded successfully.
backend-1        | 2025-01-10 13:08:13 | DEBUG | app.models.database:get_db:32 | Database session closed.
backend-1        | INFO:     172.21.0.1:39074 - "POST /users/logout HTTP/1.1" 200 OK
backend-1        | 2025-01-10 13:08:20 | DEBUG | app.models.database:get_db:22 | Initializing database session.
backend-1        | 2025-01-10 13:08:20 | INFO | app.routes.users:register:140 | Registration request received for: liamcarter_contact
backend-1        | 2025-01-10 13:08:20 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:23 | Checking for SQL injection in input: liamcarter_contact
backend-1        | 2025-01-10 13:08:20 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:40 | SQL-safe input: Original: liamcarter_contact, Sanitized: liamcarter_contact
backend-1        | 2025-01-10 13:08:20 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: liamcarter_contact
backend-1        | 2025-01-10 13:08:20 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: liamcarter_contact, Sanitized: liamcarter_contact
backend-1        | 2025-01-10 13:08:20 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:23 | Checking for SQL injection in input: itay.vazana.b@gmail.com
backend-1        | 2025-01-10 13:08:20 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:40 | SQL-safe input: Original: itay.vazana.b@gmail.com, Sanitized: itay.vazana.b@gmail.com
backend-1        | 2025-01-10 13:08:20 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: itay.vazana.b@gmail.com
backend-1        | 2025-01-10 13:08:20 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: itay.vazana.b@gmail.com, Sanitized: itay.vazana.b@gmail.com
backend-1        | 2025-01-10 13:08:20 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: ContactLiam123!
backend-1        | 2025-01-10 13:08:20 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: ContactLiam123!, Sanitized: ContactLiam123!
backend-1        | 2025-01-10 13:08:20 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: ContactLiam123!
backend-1        | 2025-01-10 13:08:20 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: ContactLiam123!, Sanitized: ContactLiam123!
backend-1        | 2025-01-10 13:08:20 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: Liam Carter
backend-1        | 2025-01-10 13:08:20 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: Liam Carter, Sanitized: Liam Carter
backend-1        | 2025-01-10 13:08:20 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: 0548765432
backend-1        | 2025-01-10 13:08:20 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: 0548765432, Sanitized: 0548765432
backend-1        | 2025-01-10 13:08:20 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: Male
backend-1        | 2025-01-10 13:08:20 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: Male, Sanitized: Male
backend-1        | 2025-01-10 13:08:20 | DEBUG | app.models.tables:__init__:73 | User model initialized: liamcarter_contact, Email: itay.vazana.b@gmail.com
backend-1        | 2025-01-10 13:08:20 | INFO | app.utils.audit_log:create_audit_log_entry:16 | Attempting to create audit log for user_id: 6082def4-778f-43d5-a884-dd35f19a4048, action: User registration
backend-1        | 2025-01-10 13:08:20 | DEBUG | app.models.tables:__init__:155 | AuditLog initialized for User ID: 6082def4-778f-43d5-a884-dd35f19a4048, Action: User registration
backend-1        | 2025-01-10 13:08:20 | INFO | app.utils.audit_log:create_audit_log_entry:34 | Audit log created successfully for user_id: 6082def4-778f-43d5-a884-dd35f19a4048, action: User registration
backend-1        | 2025-01-10 13:08:20 | DEBUG | app.models.database:get_db:26 | Database session yielded successfully.
backend-1        | 2025-01-10 13:08:20 | DEBUG | app.models.database:get_db:32 | Database session closed.
backend-1        | INFO:     172.21.0.1:34276 - "POST /users/register HTTP/1.1" 200 OK
backend-1        | 2025-01-10 13:08:20 | DEBUG | app.models.database:get_db:22 | Initializing database session.
backend-1        | 2025-01-10 13:08:20 | INFO | app.routes.users:login:98 | Login request received for: itay.vazana.b@gmail.com
backend-1        | 2025-01-10 13:08:20 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:23 | Checking for SQL injection in input: itay.vazana.b@gmail.com
backend-1        | 2025-01-10 13:08:20 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:40 | SQL-safe input: Original: itay.vazana.b@gmail.com, Sanitized: itay.vazana.b@gmail.com
backend-1        | 2025-01-10 13:08:20 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: itay.vazana.b@gmail.com
backend-1        | 2025-01-10 13:08:20 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: itay.vazana.b@gmail.com, Sanitized: itay.vazana.b@gmail.com
backend-1        | 2025-01-10 13:08:20 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: ContactLiam123!
backend-1        | 2025-01-10 13:08:20 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: ContactLiam123!, Sanitized: ContactLiam123!
backend-1        | 2025-01-10 13:08:20 | INFO | app.utils.audit_log:create_audit_log_entry:16 | Attempting to create audit log for user_id: 6082def4-778f-43d5-a884-dd35f19a4048, action: User login
backend-1        | 2025-01-10 13:08:20 | DEBUG | app.models.tables:__init__:155 | AuditLog initialized for User ID: 6082def4-778f-43d5-a884-dd35f19a4048, Action: User login
backend-1        | 2025-01-10 13:08:20 | INFO | app.utils.audit_log:create_audit_log_entry:34 | Audit log created successfully for user_id: 6082def4-778f-43d5-a884-dd35f19a4048, action: User login
backend-1        | 2025-01-10 13:08:20 | DEBUG | app.models.database:get_db:26 | Database session yielded successfully.
backend-1        | 2025-01-10 13:08:21 | DEBUG | app.models.database:get_db:32 | Database session closed.
backend-1        | INFO:     172.21.0.1:34284 - "POST /users/login HTTP/1.1" 200 OK
backend-1        | 2025-01-10 13:08:21 | DEBUG | app.models.database:get_db:22 | Initializing database session.
backend-1        | 2025-01-10 13:08:21 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:23 | Checking for SQL injection in input: 6082def4-778f-43d5-a884-dd35f19a4048
backend-1        | 2025-01-10 13:08:21 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:40 | SQL-safe input: Original: 6082def4-778f-43d5-a884-dd35f19a4048, Sanitized: 6082def4-778f-43d5-a884-dd35f19a4048
backend-1        | 2025-01-10 13:08:21 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: 6082def4-778f-43d5-a884-dd35f19a4048
backend-1        | 2025-01-10 13:08:21 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: 6082def4-778f-43d5-a884-dd35f19a4048, Sanitized: 6082def4-778f-43d5-a884-dd35f19a4048
backend-1        | 2025-01-10 13:08:21 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: Liam Carter
backend-1        | 2025-01-10 13:08:21 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: Liam Carter, Sanitized: Liam Carter
backend-1        | 2025-01-10 13:08:21 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: itay.vazana.b@gmail.com
backend-1        | 2025-01-10 13:08:21 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: itay.vazana.b@gmail.com, Sanitized: itay.vazana.b@gmail.com
backend-1        | 2025-01-10 13:08:21 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: I need help with my account. this is a test!!
backend-1        | 2025-01-10 13:08:21 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: I need help with my account. this is a test!!, Sanitized: I need help with my account. this is a test!!
backend-1        | 2025-01-10 13:08:21 | INFO | app.routes.contact_us:contact_us:47 | Contact us form submitted by Liam Carter (itay.vazana.b@gmail.com)
backend-1        | 2025-01-10 13:08:21 | INFO | app.utils.email:send_email:33 | Attempting to send email to ['admin@communication-ltd.com']
backend-1        | 2025-01-10 13:08:22 | INFO | app.utils.email:send_email:40 | Email successfully sent to ['admin@communication-ltd.com']
backend-1        | 2025-01-10 13:08:22 | INFO | app.routes.contact_us:contact_us:60 | Contact us message sent to admin.
backend-1        | 2025-01-10 13:08:22 | DEBUG | app.models.database:get_db:26 | Database session yielded successfully.
backend-1        | 2025-01-10 13:08:22 | DEBUG | app.models.database:get_db:32 | Database session closed.
backend-1        | INFO:     172.21.0.1:34290 - "POST /contact-us-send HTTP/1.1" 200 OK
backend-1        | 2025-01-10 13:08:22 | DEBUG | app.models.database:get_db:22 | Initializing database session.
backend-1        | 2025-01-10 13:08:22 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:23 | Checking for SQL injection in input: 6082def4-778f-43d5-a884-dd35f19a4048
backend-1        | 2025-01-10 13:08:22 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:40 | SQL-safe input: Original: 6082def4-778f-43d5-a884-dd35f19a4048, Sanitized: 6082def4-778f-43d5-a884-dd35f19a4048
backend-1        | 2025-01-10 13:08:22 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: 6082def4-778f-43d5-a884-dd35f19a4048
backend-1        | 2025-01-10 13:08:22 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: 6082def4-778f-43d5-a884-dd35f19a4048, Sanitized: 6082def4-778f-43d5-a884-dd35f19a4048
backend-1        | 2025-01-10 13:08:22 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: Liam Carter
backend-1        | 2025-01-10 13:08:22 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: Liam Carter, Sanitized: Liam Carter
backend-1        | 2025-01-10 13:08:22 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: itay.vazana.b@gmail.com
backend-1        | 2025-01-10 13:08:22 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: itay.vazana.b@gmail.com, Sanitized: itay.vazana.b@gmail.com
backend-1        | 2025-01-10 13:08:22 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: Please send me a copy of this message. Mambo Jambo
backend-1        | 2025-01-10 13:08:22 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: Please send me a copy of this message. Mambo Jambo, Sanitized: Please send me a copy of this message. Mambo Jambo
backend-1        | 2025-01-10 13:08:22 | INFO | app.routes.contact_us:contact_us:47 | Contact us form submitted by Liam Carter (itay.vazana.b@gmail.com)
backend-1        | 2025-01-10 13:08:22 | INFO | app.utils.email:send_email:33 | Attempting to send email to ['admin@communication-ltd.com']
backend-1        | 2025-01-10 13:08:24 | INFO | app.utils.email:send_email:40 | Email successfully sent to ['admin@communication-ltd.com']
backend-1        | 2025-01-10 13:08:24 | INFO | app.routes.contact_us:contact_us:60 | Contact us message sent to admin.
backend-1        | 2025-01-10 13:08:24 | INFO | app.utils.email:send_email:33 | Attempting to send email to ['itay.vazana.b@gmail.com']
backend-1        | 2025-01-10 13:08:25 | INFO | app.utils.email:send_email:40 | Email successfully sent to ['itay.vazana.b@gmail.com']
backend-1        | 2025-01-10 13:08:25 | INFO | app.routes.contact_us:contact_us:73 | Copy of contact us message sent to itay.vazana.b@gmail.com.
backend-1        | 2025-01-10 13:08:25 | DEBUG | app.models.database:get_db:26 | Database session yielded successfully.
backend-1        | 2025-01-10 13:08:25 | DEBUG | app.models.database:get_db:32 | Database session closed.
backend-1        | INFO:     172.21.0.1:34306 - "POST /contact-us-send HTTP/1.1" 200 OK
backend-1        | 2025-01-10 13:08:25 | DEBUG | app.models.database:get_db:22 | Initializing database session.
backend-1        | 2025-01-10 13:08:25 | INFO | app.routes.users:logout:444 | Logout request received with token: e5922728-c13c-4526-af5f-c4107373624b
backend-1        | 2025-01-10 13:08:25 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:23 | Checking for SQL injection in input: e5922728-c13c-4526-af5f-c4107373624b
backend-1        | 2025-01-10 13:08:25 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:40 | SQL-safe input: Original: e5922728-c13c-4526-af5f-c4107373624b, Sanitized: e5922728-c13c-4526-af5f-c4107373624b
backend-1        | 2025-01-10 13:08:25 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: e5922728-c13c-4526-af5f-c4107373624b
backend-1        | 2025-01-10 13:08:25 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: e5922728-c13c-4526-af5f-c4107373624b, Sanitized: e5922728-c13c-4526-af5f-c4107373624b
backend-1        | 2025-01-10 13:08:25 | INFO | app.utils.audit_log:create_audit_log_entry:16 | Attempting to create audit log for user_id: 6082def4-778f-43d5-a884-dd35f19a4048, action: User logout
backend-1        | 2025-01-10 13:08:25 | DEBUG | app.models.tables:__init__:155 | AuditLog initialized for User ID: 6082def4-778f-43d5-a884-dd35f19a4048, Action: User logout
backend-1        | 2025-01-10 13:08:25 | INFO | app.utils.audit_log:create_audit_log_entry:34 | Audit log created successfully for user_id: 6082def4-778f-43d5-a884-dd35f19a4048, action: User logout
backend-1        | 2025-01-10 13:08:25 | INFO | app.routes.users:logout:463 | User 6082def4-778f-43d5-a884-dd35f19a4048 successfully logged out
backend-1        | 2025-01-10 13:08:25 | DEBUG | app.models.database:get_db:26 | Database session yielded successfully.
backend-1        | 2025-01-10 13:08:25 | DEBUG | app.models.database:get_db:32 | Database session closed.
backend-1        | INFO:     172.21.0.1:34308 - "POST /users/logout HTTP/1.1" 200 OK
backend-1        | 2025-01-10 13:08:35 | DEBUG | app.models.database:get_db:22 | Initializing database session.
backend-1        | 2025-01-10 13:08:35 | INFO | app.routes.users:register:140 | Registration request received for: legituser1
backend-1        | 2025-01-10 13:08:35 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:23 | Checking for SQL injection in input: legituser1
backend-1        | 2025-01-10 13:08:35 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:40 | SQL-safe input: Original: legituser1, Sanitized: legituser1
backend-1        | 2025-01-10 13:08:35 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: legituser1
backend-1        | 2025-01-10 13:08:35 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: legituser1, Sanitized: legituser1
backend-1        | 2025-01-10 13:08:35 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:23 | Checking for SQL injection in input: legituser1@example.com
backend-1        | 2025-01-10 13:08:35 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:40 | SQL-safe input: Original: legituser1@example.com, Sanitized: legituser1@example.com
backend-1        | 2025-01-10 13:08:35 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: legituser1@example.com
backend-1        | 2025-01-10 13:08:35 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: legituser1@example.com, Sanitized: legituser1@example.com
backend-1        | 2025-01-10 13:08:35 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: SecurePass123!
backend-1        | 2025-01-10 13:08:35 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: SecurePass123!, Sanitized: SecurePass123!
backend-1        | 2025-01-10 13:08:35 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: SecurePass123!
backend-1        | 2025-01-10 13:08:35 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: SecurePass123!, Sanitized: SecurePass123!
backend-1        | 2025-01-10 13:08:35 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: Legit User1
backend-1        | 2025-01-10 13:08:35 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: Legit User1, Sanitized: Legit User1
backend-1        | 2025-01-10 13:08:35 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: 1234567890
backend-1        | 2025-01-10 13:08:35 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: 1234567890, Sanitized: 1234567890
backend-1        | 2025-01-10 13:08:35 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: Male
backend-1        | 2025-01-10 13:08:35 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: Male, Sanitized: Male
backend-1        | 2025-01-10 13:08:35 | DEBUG | app.models.tables:__init__:73 | User model initialized: legituser1, Email: legituser1@example.com
backend-1        | 2025-01-10 13:08:35 | INFO | app.utils.audit_log:create_audit_log_entry:16 | Attempting to create audit log for user_id: bd86a003-dce2-42ae-819f-a124ad9db05d, action: User registration
backend-1        | 2025-01-10 13:08:35 | DEBUG | app.models.tables:__init__:155 | AuditLog initialized for User ID: bd86a003-dce2-42ae-819f-a124ad9db05d, Action: User registration
backend-1        | 2025-01-10 13:08:35 | INFO | app.utils.audit_log:create_audit_log_entry:34 | Audit log created successfully for user_id: bd86a003-dce2-42ae-819f-a124ad9db05d, action: User registration
backend-1        | 2025-01-10 13:08:35 | DEBUG | app.models.database:get_db:26 | Database session yielded successfully.
backend-1        | 2025-01-10 13:08:35 | DEBUG | app.models.database:get_db:32 | Database session closed.
backend-1        | INFO:     172.21.0.1:44802 - "POST /users/register HTTP/1.1" 200 OK
backend-1        | 2025-01-10 13:08:35 | DEBUG | app.models.database:get_db:22 | Initializing database session.
backend-1        | 2025-01-10 13:08:35 | INFO | app.routes.users:login:98 | Login request received for: legituser1@example.com
backend-1        | 2025-01-10 13:08:35 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:23 | Checking for SQL injection in input: legituser1@example.com
backend-1        | 2025-01-10 13:08:35 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:40 | SQL-safe input: Original: legituser1@example.com, Sanitized: legituser1@example.com
backend-1        | 2025-01-10 13:08:35 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: legituser1@example.com
backend-1        | 2025-01-10 13:08:35 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: legituser1@example.com, Sanitized: legituser1@example.com
backend-1        | 2025-01-10 13:08:35 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: SecurePass123!
backend-1        | 2025-01-10 13:08:35 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: SecurePass123!, Sanitized: SecurePass123!
backend-1        | 2025-01-10 13:08:35 | INFO | app.utils.audit_log:create_audit_log_entry:16 | Attempting to create audit log for user_id: bd86a003-dce2-42ae-819f-a124ad9db05d, action: User login
backend-1        | 2025-01-10 13:08:35 | DEBUG | app.models.tables:__init__:155 | AuditLog initialized for User ID: bd86a003-dce2-42ae-819f-a124ad9db05d, Action: User login
backend-1        | 2025-01-10 13:08:35 | INFO | app.utils.audit_log:create_audit_log_entry:34 | Audit log created successfully for user_id: bd86a003-dce2-42ae-819f-a124ad9db05d, action: User login
backend-1        | 2025-01-10 13:08:35 | DEBUG | app.models.database:get_db:26 | Database session yielded successfully.
backend-1        | 2025-01-10 13:08:35 | DEBUG | app.models.database:get_db:32 | Database session closed.
backend-1        | INFO:     172.21.0.1:44808 - "POST /users/login HTTP/1.1" 200 OK
backend-1        | 2025-01-10 13:08:35 | DEBUG | app.models.database:get_db:22 | Initializing database session.
backend-1        | 2025-01-10 13:08:35 | INFO | app.routes.users:register:140 | Registration request received for: ' OR '1'='1
backend-1        | 2025-01-10 13:08:35 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:23 | Checking for SQL injection in input: ' OR '1'='1
backend-1        | 2025-01-10 13:08:35 | WARNING | app.utils.attack_detectors:prevent_sql_injection:37 | Potential SQL injection pattern detected: (?i)(\bSELECT\b|\bINSERT\b|\bDELETE\b|\bUPDATE\b|\bDROP\b|\bALTER\b|\bCREATE\b|\bEXEC\b|\bUNION\b|\b--\b|\b;\b|\bOR\b|\bAND\b) in ' OR '1'='1
backend-1        | 2025-01-10 13:08:35 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:40 | SQL-safe input: Original: ' OR '1'='1, Sanitized: '  '1'='1
backend-1        | 2025-01-10 13:08:35 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: '  '1'='1
backend-1        | 2025-01-10 13:08:35 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: '  '1'='1, Sanitized: &#x27;  &#x27;1&#x27;=&#x27;1
backend-1        | 2025-01-10 13:08:35 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:23 | Checking for SQL injection in input: sqlinjection@example.com
backend-1        | 2025-01-10 13:08:35 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:40 | SQL-safe input: Original: sqlinjection@example.com, Sanitized: sqlinjection@example.com
backend-1        | 2025-01-10 13:08:35 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: sqlinjection@example.com
backend-1        | 2025-01-10 13:08:35 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: sqlinjection@example.com, Sanitized: sqlinjection@example.com
backend-1        | 2025-01-10 13:08:35 | WARNING | app.routes.users:register:146 | SQL Injection or XSS attempt detected during registration.
backend-1        | 2025-01-10 13:08:35 | ERROR | app.models.database:get_db:28 | Error occurred during database session: 400: Invalid input detected.
backend-1        | 2025-01-10 13:08:35 | DEBUG | app.models.database:get_db:32 | Database session closed.
backend-1        | INFO:     172.21.0.1:44822 - "POST /users/register HTTP/1.1" 400 Bad Request
backend-1        | 2025-01-10 13:08:35 | DEBUG | app.models.database:get_db:22 | Initializing database session.
backend-1        | 2025-01-10 13:08:35 | INFO | app.routes.users:login:98 | Login request received for: ' OR '1'='1
backend-1        | 2025-01-10 13:08:35 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:23 | Checking for SQL injection in input: ' OR '1'='1
backend-1        | 2025-01-10 13:08:35 | WARNING | app.utils.attack_detectors:prevent_sql_injection:37 | Potential SQL injection pattern detected: (?i)(\bSELECT\b|\bINSERT\b|\bDELETE\b|\bUPDATE\b|\bDROP\b|\bALTER\b|\bCREATE\b|\bEXEC\b|\bUNION\b|\b--\b|\b;\b|\bOR\b|\bAND\b) in ' OR '1'='1
backend-1        | 2025-01-10 13:08:35 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:40 | SQL-safe input: Original: ' OR '1'='1, Sanitized: '  '1'='1
backend-1        | 2025-01-10 13:08:35 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: '  '1'='1
backend-1        | 2025-01-10 13:08:35 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: '  '1'='1, Sanitized: &#x27;  &#x27;1&#x27;=&#x27;1
backend-1        | 2025-01-10 13:08:35 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: ' OR '1'='1
backend-1        | 2025-01-10 13:08:35 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: ' OR '1'='1, Sanitized: &#x27; OR &#x27;1&#x27;=&#x27;1
backend-1        | 2025-01-10 13:08:35 | WARNING | app.routes.users:login:104 | XSS or SQL Injection attempt detected during login.
backend-1        | 2025-01-10 13:08:35 | ERROR | app.models.database:get_db:28 | Error occurred during database session: 400: Invalid input detected.
backend-1        | 2025-01-10 13:08:35 | DEBUG | app.models.database:get_db:32 | Database session closed.
backend-1        | INFO:     172.21.0.1:44826 - "POST /users/login HTTP/1.1" 400 Bad Request
backend-1        | 2025-01-10 13:08:35 | DEBUG | app.models.database:get_db:22 | Initializing database session.
backend-1        | 2025-01-10 13:08:35 | INFO | app.routes.users:request_password_reset:308 | Password reset request received for: ' OR '1'='1 --
backend-1        | 2025-01-10 13:08:35 | WARNING | app.routes.users:request_password_reset:314 | Invalid email format: ' OR '1'='1 --. Details: 1 validation error for EmailValidationRequest
backend-1        | email
backend-1        |   value is not a valid email address: An email address must have an @-sign. [type=value_error, input_value="' OR '1'='1 --", input_type=str]
backend-1        | 2025-01-10 13:08:35 | WARNING | app.routes.users:request_password_reset:376 | Handled HTTP exception: Invalid email format
backend-1        | 2025-01-10 13:08:35 | ERROR | app.models.database:get_db:28 | Error occurred during database session: 400: Invalid email format
backend-1        | 2025-01-10 13:08:35 | DEBUG | app.models.database:get_db:32 | Database session closed.
backend-1        | INFO:     172.21.0.1:44830 - "POST /users/password-reset HTTP/1.1" 400 Bad Request
backend-1        | 2025-01-10 13:08:35 | DEBUG | app.models.database:get_db:22 | Initializing database session.
backend-1        | 2025-01-10 13:08:35 | INFO | app.routes.users:update_user:240 | Update request received for user: 1 OR 1=1
backend-1        | 2025-01-10 13:08:35 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:23 | Checking for SQL injection in input: 1 OR 1=1
backend-1        | 2025-01-10 13:08:35 | WARNING | app.utils.attack_detectors:prevent_sql_injection:37 | Potential SQL injection pattern detected: (?i)(\bSELECT\b|\bINSERT\b|\bDELETE\b|\bUPDATE\b|\bDROP\b|\bALTER\b|\bCREATE\b|\bEXEC\b|\bUNION\b|\b--\b|\b;\b|\bOR\b|\bAND\b) in 1 OR 1=1
backend-1        | 2025-01-10 13:08:35 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:40 | SQL-safe input: Original: 1 OR 1=1, Sanitized: 1  1=1
backend-1        | 2025-01-10 13:08:35 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: 1  1=1
backend-1        | 2025-01-10 13:08:35 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: 1  1=1, Sanitized: 1  1=1
backend-1        | 2025-01-10 13:08:35 | WARNING | app.routes.users:update_user:244 | SQL Injection or XSS attempt detected in user_id.
backend-1        | 2025-01-10 13:08:35 | ERROR | app.models.database:get_db:28 | Error occurred during database session: 400: Invalid input detected.
backend-1        | 2025-01-10 13:08:35 | DEBUG | app.models.database:get_db:32 | Database session closed.
backend-1        | INFO:     172.21.0.1:44836 - "PUT /users/1%20OR%201%3D1 HTTP/1.1" 400 Bad Request
backend-1        | 2025-01-10 13:08:41 | DEBUG | app.models.database:get_db:22 | Initializing database session.
backend-1        | 2025-01-10 13:08:41 | INFO | app.routes.users:register:140 | Registration request received for: legituser2
backend-1        | 2025-01-10 13:08:41 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:23 | Checking for SQL injection in input: legituser2
backend-1        | 2025-01-10 13:08:41 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:40 | SQL-safe input: Original: legituser2, Sanitized: legituser2
backend-1        | 2025-01-10 13:08:41 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: legituser2
backend-1        | 2025-01-10 13:08:41 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: legituser2, Sanitized: legituser2
backend-1        | 2025-01-10 13:08:41 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:23 | Checking for SQL injection in input: legituser2@example.com
backend-1        | 2025-01-10 13:08:41 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:40 | SQL-safe input: Original: legituser2@example.com, Sanitized: legituser2@example.com
backend-1        | 2025-01-10 13:08:41 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: legituser2@example.com
backend-1        | 2025-01-10 13:08:41 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: legituser2@example.com, Sanitized: legituser2@example.com
backend-1        | 2025-01-10 13:08:41 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: SecurePass123!
backend-1        | 2025-01-10 13:08:41 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: SecurePass123!, Sanitized: SecurePass123!
backend-1        | 2025-01-10 13:08:41 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: SecurePass123!
backend-1        | 2025-01-10 13:08:41 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: SecurePass123!, Sanitized: SecurePass123!
backend-1        | 2025-01-10 13:08:42 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: Legit User2
backend-1        | 2025-01-10 13:08:42 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: Legit User2, Sanitized: Legit User2
backend-1        | 2025-01-10 13:08:42 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: 1234567890
backend-1        | 2025-01-10 13:08:42 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: 1234567890, Sanitized: 1234567890
backend-1        | 2025-01-10 13:08:42 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: Male
backend-1        | 2025-01-10 13:08:42 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: Male, Sanitized: Male
backend-1        | 2025-01-10 13:08:42 | DEBUG | app.models.tables:__init__:73 | User model initialized: legituser2, Email: legituser2@example.com
backend-1        | 2025-01-10 13:08:42 | INFO | app.utils.audit_log:create_audit_log_entry:16 | Attempting to create audit log for user_id: 0850d036-e675-4e26-920f-d2bd4aecd061, action: User registration
backend-1        | 2025-01-10 13:08:42 | DEBUG | app.models.tables:__init__:155 | AuditLog initialized for User ID: 0850d036-e675-4e26-920f-d2bd4aecd061, Action: User registration
backend-1        | 2025-01-10 13:08:42 | INFO | app.utils.audit_log:create_audit_log_entry:34 | Audit log created successfully for user_id: 0850d036-e675-4e26-920f-d2bd4aecd061, action: User registration
backend-1        | 2025-01-10 13:08:42 | DEBUG | app.models.database:get_db:26 | Database session yielded successfully.
backend-1        | 2025-01-10 13:08:42 | DEBUG | app.models.database:get_db:32 | Database session closed.
backend-1        | INFO:     172.21.0.1:33862 - "POST /users/register HTTP/1.1" 200 OK
backend-1        | 2025-01-10 13:08:42 | DEBUG | app.models.database:get_db:22 | Initializing database session.
backend-1        | 2025-01-10 13:08:42 | INFO | app.routes.users:login:98 | Login request received for: legituser2@example.com
backend-1        | 2025-01-10 13:08:42 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:23 | Checking for SQL injection in input: legituser2@example.com
backend-1        | 2025-01-10 13:08:42 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:40 | SQL-safe input: Original: legituser2@example.com, Sanitized: legituser2@example.com
backend-1        | 2025-01-10 13:08:42 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: legituser2@example.com
backend-1        | 2025-01-10 13:08:42 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: legituser2@example.com, Sanitized: legituser2@example.com
backend-1        | 2025-01-10 13:08:42 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: SecurePass123!
backend-1        | 2025-01-10 13:08:42 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: SecurePass123!, Sanitized: SecurePass123!
backend-1        | 2025-01-10 13:08:42 | INFO | app.utils.audit_log:create_audit_log_entry:16 | Attempting to create audit log for user_id: 0850d036-e675-4e26-920f-d2bd4aecd061, action: User login
backend-1        | 2025-01-10 13:08:42 | DEBUG | app.models.tables:__init__:155 | AuditLog initialized for User ID: 0850d036-e675-4e26-920f-d2bd4aecd061, Action: User login
backend-1        | 2025-01-10 13:08:42 | INFO | app.utils.audit_log:create_audit_log_entry:34 | Audit log created successfully for user_id: 0850d036-e675-4e26-920f-d2bd4aecd061, action: User login
backend-1        | 2025-01-10 13:08:42 | DEBUG | app.models.database:get_db:26 | Database session yielded successfully.
backend-1        | 2025-01-10 13:08:42 | DEBUG | app.models.database:get_db:32 | Database session closed.
backend-1        | INFO:     172.21.0.1:33864 - "POST /users/login HTTP/1.1" 200 OK
backend-1        | 2025-01-10 13:08:42 | DEBUG | app.models.database:get_db:22 | Initializing database session.
backend-1        | 2025-01-10 13:08:42 | INFO | app.routes.users:register:140 | Registration request received for: legituser2
backend-1        | 2025-01-10 13:08:42 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:23 | Checking for SQL injection in input: legituser2
backend-1        | 2025-01-10 13:08:42 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:40 | SQL-safe input: Original: legituser2, Sanitized: legituser2
backend-1        | 2025-01-10 13:08:42 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: legituser2
backend-1        | 2025-01-10 13:08:42 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: legituser2, Sanitized: legituser2
backend-1        | 2025-01-10 13:08:42 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:23 | Checking for SQL injection in input: legituser2@example.com
backend-1        | 2025-01-10 13:08:42 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:40 | SQL-safe input: Original: legituser2@example.com, Sanitized: legituser2@example.com
backend-1        | 2025-01-10 13:08:42 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: legituser2@example.com
backend-1        | 2025-01-10 13:08:42 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: legituser2@example.com, Sanitized: legituser2@example.com
backend-1        | 2025-01-10 13:08:42 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: SecurePass123!
backend-1        | 2025-01-10 13:08:42 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: SecurePass123!, Sanitized: SecurePass123!
backend-1        | 2025-01-10 13:08:42 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: SecurePass123!
backend-1        | 2025-01-10 13:08:42 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: SecurePass123!, Sanitized: SecurePass123!
backend-1        | 2025-01-10 13:08:42 | WARNING | app.routes.users:register:160 | Registration failed - user already exists: legituser2
backend-1        | 2025-01-10 13:08:42 | ERROR | app.models.database:get_db:28 | Error occurred during database session: 400: User with this email or username already exists
backend-1        | 2025-01-10 13:08:42 | DEBUG | app.models.database:get_db:32 | Database session closed.
backend-1        | INFO:     172.21.0.1:33868 - "POST /users/register HTTP/1.1" 400 Bad Request
backend-1        | 2025-01-10 13:08:42 | DEBUG | app.models.database:get_db:22 | Initializing database session.
backend-1        | 2025-01-10 13:08:42 | INFO | app.routes.users:login:98 | Login request received for: <script>alert('XSS')</script>
backend-1        | 2025-01-10 13:08:42 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:23 | Checking for SQL injection in input: <script>alert('XSS')</script>
backend-1        | 2025-01-10 13:08:42 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:40 | SQL-safe input: Original: <script>alert('XSS')</script>, Sanitized: <script>alert('XSS')</script>
backend-1        | 2025-01-10 13:08:42 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: <script>alert('XSS')</script>
backend-1        | 2025-01-10 13:08:42 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: <script>alert('XSS')</script>, Sanitized: &lt;script&gt;alert(&#x27;XSS&#x27;)&lt;/script&gt;
backend-1        | 2025-01-10 13:08:42 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: SecurePass123!
backend-1        | 2025-01-10 13:08:42 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: SecurePass123!, Sanitized: SecurePass123!
backend-1        | 2025-01-10 13:08:42 | WARNING | app.routes.users:login:104 | XSS or SQL Injection attempt detected during login.
backend-1        | 2025-01-10 13:08:42 | ERROR | app.models.database:get_db:28 | Error occurred during database session: 400: Invalid input detected.
backend-1        | 2025-01-10 13:08:42 | DEBUG | app.models.database:get_db:32 | Database session closed.
backend-1        | INFO:     172.21.0.1:33870 - "POST /users/login HTTP/1.1" 400 Bad Request
backend-1        | 2025-01-10 13:08:42 | DEBUG | app.models.database:get_db:22 | Initializing database session.
backend-1        | 2025-01-10 13:08:42 | INFO | app.routes.users:request_password_reset:308 | Password reset request received for: <script>alert('XSS')</script>
backend-1        | 2025-01-10 13:08:42 | WARNING | app.routes.users:request_password_reset:314 | Invalid email format: <script>alert('XSS')</script>. Details: 1 validation error for EmailValidationRequest
backend-1        | email
backend-1        |   value is not a valid email address: The display name contains invalid characters when not quoted: '(', ')', '>'. [type=value_error, input_value="<script>alert('XSS')</script>", input_type=str]
backend-1        | 2025-01-10 13:08:42 | WARNING | app.routes.users:request_password_reset:376 | Handled HTTP exception: Invalid email format
backend-1        | 2025-01-10 13:08:42 | ERROR | app.models.database:get_db:28 | Error occurred during database session: 400: Invalid email format
backend-1        | 2025-01-10 13:08:42 | DEBUG | app.models.database:get_db:32 | Database session closed.
backend-1        | INFO:     172.21.0.1:33886 - "POST /users/password-reset HTTP/1.1" 400 Bad Request
backend-1        | 2025-01-10 13:08:42 | DEBUG | app.models.database:get_db:22 | Initializing database session.
backend-1        | 2025-01-10 13:08:42 | INFO | app.routes.users:update_user:240 | Update request received for user: 1
backend-1        | 2025-01-10 13:08:42 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:23 | Checking for SQL injection in input: 1
backend-1        | 2025-01-10 13:08:42 | DEBUG | app.utils.attack_detectors:prevent_sql_injection:40 | SQL-safe input: Original: 1, Sanitized: 1
backend-1        | 2025-01-10 13:08:42 | DEBUG | app.utils.attack_detectors:sanitize_input:10 | Sanitizing input: 1
backend-1        | 2025-01-10 13:08:42 | DEBUG | app.utils.attack_detectors:sanitize_input:15 | Sanitized input: Original: 1, Sanitized: 1
backend-1        | 2025-01-10 13:08:42 | WARNING | app.routes.users:update_user:249 | User not found or invalid ID: 1
backend-1        | 2025-01-10 13:08:42 | ERROR | app.models.database:get_db:28 | Error occurred during database session: 400: Invalid user ID detected.
backend-1        | 2025-01-10 13:08:42 | DEBUG | app.models.database:get_db:32 | Database session closed.
backend-1        | INFO:     172.21.0.1:33892 - "PUT /users/1 HTTP/1.1" 400 Bad Request